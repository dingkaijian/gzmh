<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context" xsi:schemaLocation="
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.1.xsd
		http://www.springframework.org/schema/context  http://www.springframework.org/schema/context/spring-context-4.1.xsd"
	default-lazy-init="true">

	<description>Shiro Configuration</description>

    <!-- 加载配置属性文件 -->
	<context:property-placeholder ignore-unresolvable="true" location="classpath:jeesite.properties" />
	
	<!-- Shiro权限过滤过滤器定义 -->
	<bean name="shiroFilterChainDefinitions" class="java.lang.String">
		<constructor-arg>
			<value>
				/static/** = anon
				/userfiles/** = anon
				${adminPath}/resetpw/sendMobileCode = anon
				${adminPath}/cas = cas
				${adminPath}/login = authc2
				${adminPath}/gzmh/login = gzmh
				${adminPath}/logout = logout
				${adminPath}/** = user
				/act/editor/** = user
				/ReportServer/** = user
				
				${adminPath}/oauth/token = anon
				${adminPath}/oauth/authorize = authc
				${adminPath}/user/clearCache/* = anon
				${adminPath}/oauth/delayToken = anon
				${adminPath}/** = user
			</value>
		</constructor-arg>
	</bean>
	
	<!-- OAuth2身份验证过滤器 -->
     <bean id="oAuth2AuthenticationFilter" class="cn.ac.ict.shiro.oauth2.OAuth2AuthenticationFilter">
        <property name="authcCodeParam" value="code"/>
        <property name="failureUrl" value="/oauth2Failure.jsp"/>
    </bean> 
	
	<!-- 安全认证过滤器 -->
	<bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">
		<property name="securityManager" ref="securityManager" /><!-- 
		<property name="loginUrl" value="${cas.server.url}?service=${cas.project.url}${adminPath}/cas" /> -->
		<property name="loginUrl" value="${adminPath}/login" />
		<property name="successUrl" value="${adminPath}?login" />
		<property name="filters">
            <map>
                <entry key="cas" value-ref="casFilter"/>
                <entry key="authc2" value-ref="formAuthenticationFilter"/>
                
                <entry key="authc" value-ref="ictFormAuthenticationFilter"/>
                <entry key="gzmh" value-ref="gzLoginFilter"/>
                <entry key="oauth2Authc" value-ref="oAuth2AuthenticationFilter"/>
            </map>
        </property>
		<property name="filterChainDefinitions">
			<ref bean="shiroFilterChainDefinitions"/>
		</property>
	</bean>
	
	<bean id="authenticator" class="cn.ac.ict.modules.sys.security.GjZwfwModularRealmAuthenticator">
	    <property name="realms">
	        <list>
	        	<ref bean="systemAuthorizingRealm"/>
	            <ref bean="ictSystemAuthorizingRealm"/>
	            <ref bean="gzLoginRealm"/>
	        </list>
	    </property>
	</bean>
	
	<bean id="authorizer" class="org.apache.shiro.authz.ModularRealmAuthorizer">
	    <property name="realms">
	        <list>
	         	<ref bean="systemAuthorizingRealm"/>
	            <ref bean="ictSystemAuthorizingRealm"/>
	            <ref bean="gzLoginRealm"/>
	        </list>
	    </property>
	</bean>
	
	<!-- CAS认证过滤器 -->  
	<bean id="casFilter" class="org.apache.shiro.cas.CasFilter">  
		<property name="failureUrl" value="${adminPath}/login"/>
	</bean>
	
	<!-- 工作门户自定义Filter -->
	<bean name="gzLoginFilter" class="cn.ac.ict.modules.sys.security.filter.GzLoginFilter"/>
	
	<!-- 定义Shiro安全管理配置 -->
	<bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
		<!-- <property name="realm" ref="systemAuthorizingRealm" /> -->
		<!-- <property name="authorizer" ref="authorizer"/> -->
		<property name="authenticator" ref="authenticator"/>
		<property name="authorizer" ref="authorizer"/>
		<property name="sessionManager" ref="sessionManager" />
		<property name="cacheManager" ref="shiroCacheManager" />
	</bean>
	
	<!-- 自定义的Realm实现 -->
	<bean name="systemAuthorizingRealm" class="com.thinkgem.jeesite.modules.sys.security.SystemAuthorizingRealm">
		<property name="credentialsMatcher" ref="gzCredentialsMatcher" />
	</bean>
	<bean name="ictSystemAuthorizingRealm" class="cn.ac.ict.modules.sys.security.realm.IctSystemAuthorizingRealm">
		<property name="credentialsMatcher" ref="ictCredentialsMatcher" />
	</bean>
	<bean name="gzLoginRealm" class="cn.ac.ict.modules.sys.security.realm.GzLoginRealm">
		<property name="credentialsMatcher" ref="gzCredentialsMatcher" />
	</bean>
	<!-- 自定义的凭证（密码）匹配器 -->
	<bean id="ictCredentialsMatcher" class="cn.ac.ict.modules.sys.security.matcher.IctCredentialsMatcher">
	</bean>
	<bean id="gzCredentialsMatcher" class="cn.ac.ict.modules.sys.security.matcher.GzCredentialsMatcher">
	</bean>
	
	<!-- 自定义会话管理配置 -->
	<bean id="sessionManager" class="com.thinkgem.jeesite.common.security.shiro.session.SessionManager"> 
		<property name="sessionDAO" ref="sessionDAO"/>
		
		<!-- 会话超时时间，单位：毫秒  -->
		<property name="globalSessionTimeout" value="${session.sessionTimeout}"/>
		
		<!-- 定时清理失效会话, 清理用户直接关闭浏览器造成的孤立会话   -->
		<property name="sessionValidationInterval" value="${session.sessionTimeoutClean}"/>
<!--  		<property name="sessionValidationSchedulerEnabled" value="false"/> -->
 		<property name="sessionValidationSchedulerEnabled" value="true"/>
 		
		<property name="sessionIdCookie" ref="sessionIdCookie"/>
		<property name="sessionIdCookieEnabled" value="true"/>
	</bean>
	
	<!-- 指定本系统SESSIONID, 默认为: JSESSIONID 问题: 与SERVLET容器名冲突, 如JETTY, TOMCAT 等默认JSESSIONID,
		当跳出SHIRO SERVLET时如ERROR-PAGE容器会为JSESSIONID重新分配值导致登录会话丢失! -->
	<bean id="sessionIdCookie" class="org.apache.shiro.web.servlet.SimpleCookie">
	    <constructor-arg name="name" value="jeesite.session.id"/>
	</bean>

	<!-- 自定义Session存储容器 -->
	<!-- <bean id="sessionDAO" class="com.thinkgem.jeesite.common.security.shiro.session.JedisSessionDAO">
		<property name="sessionIdGenerator" ref="idGen" />
		<property name="sessionKeyPrefix" value="${redis.keyPrefix}_session_" />
	</bean> -->
	<bean id="sessionDAO" class="com.thinkgem.jeesite.common.security.shiro.session.CacheSessionDAO">
		<property name="sessionIdGenerator" ref="idGen" />
		<property name="activeSessionsCacheName" value="activeSessionsCache" />
		<property name="cacheManager" ref="shiroCacheManager" />
	</bean>
	
	<!-- 自定义系统缓存管理器-->
<!-- 	<bean id="shiroCacheManager" class="com.thinkgem.jeesite.common.security.shiro.cache.JedisCacheManager"> -->
<!-- 		<property name="cacheKeyPrefix" value="${redis.keyPrefix}_cache_" /> -->
<!-- 	</bean> -->
	<bean id="shiroCacheManager" class="org.apache.shiro.cache.ehcache.EhCacheManager">
		<property name="cacheManager" ref="cacheManager"/>
	</bean>
	
	<!-- 保证实现了Shiro内部lifecycle函数的bean执行 -->
	<bean id="lifecycleBeanPostProcessor" class="org.apache.shiro.spring.LifecycleBeanPostProcessor"/>
	
	<!-- AOP式方法级权限检查  -->
	<bean class="org.springframework.aop.framework.autoproxy.DefaultAdvisorAutoProxyCreator" depends-on="lifecycleBeanPostProcessor">
		<property name="proxyTargetClass" value="true" />
	</bean>
	<bean class="org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor">
    	<property name="securityManager" ref="securityManager"/>
	</bean>
	
</beans>